OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T11:57:11.633426+02:00' ],		#prior : OmReference [ 'Pharo7.0-SNAPSHOT-32bit-9f17218.3e5dj33ageuin12asb387gqjr', '46' ],		#self : OmReference [ '1' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Car\r\tinstanceVariableNames: \'price\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LifewareHR-Core\''			},			#name : #Car,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #Car					},					#name : #price,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Car class\r\tinstanceVariableNames: \'\''				},				#name : #'Car class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #Car				},				#parent : @7,				#content : 'exercises.',				#stamp : 'VincentBlondeau 3/25/2019 10:12'			},			#classVariables : OrderedCollection [ ],			#category : #LifewareHR-Core,			#package : #LifewareHR,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Car\r\tinstanceVariableNames: \'price type\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LifewareHR-Core\''			},			#name : #Car,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #Car					},					#name : #price,					#parent : @23				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #Car					},					#name : #type,					#parent : @23				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Car class\r\tinstanceVariableNames: \'\''				},				#name : #'Car class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @23			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #Car				},				#parent : @23,				#content : 'exercises.',				#stamp : 'VincentBlondeau 3/25/2019 10:12'			},			#classVariables : OrderedCollection [ ],			#category : #LifewareHR-Core,			#package : #LifewareHR,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T11:57:19.029237+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #Car			},			#name : #'type:',			#protocol : #'as yet unclassified',			#sourceCode : 'type: aType\r\ttype := aType',			#stamp : 'JN 6/20/2019 11:57',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T11:57:19.037299+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #Car			},			#name : #'type:',			#protocol : #'as yet unclassified',			#sourceCode : 'type: aType\r\ttype := aType',			#stamp : 'JN 6/20/2019 11:57',			#package : #LifewareHR		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #Car			},			#name : #'type:',			#protocol : #accessing,			#sourceCode : 'type: aType\r\ttype := aType',			#stamp : 'JN 6/20/2019 11:57',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T11:57:53.27597+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #Car			},			#name : #'setType:',			#protocol : #'as yet unclassified',			#sourceCode : 'setType: aType\r\ttype := aType',			#stamp : 'JN 6/20/2019 11:57',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T11:57:53.282915+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #Car			},			#name : #'setType:',			#protocol : #'as yet unclassified',			#sourceCode : 'setType: aType\r\ttype := aType',			#stamp : 'JN 6/20/2019 11:57',			#package : #LifewareHR		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #Car			},			#name : #'setType:',			#protocol : #initialization,			#sourceCode : 'setType: aType\r\ttype := aType',			#stamp : 'JN 6/20/2019 11:57',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T11:58:15.570223+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #Car			},			#name : #type,			#protocol : #initialization,			#sourceCode : 'type\r\t^type',			#stamp : 'JN 6/20/2019 11:58',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T11:58:25.161859+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #Car			},			#name : #type,			#protocol : #initialization,			#sourceCode : 'type\r\t^type',			#stamp : 'JN 6/20/2019 11:58',			#package : #LifewareHR		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #Car			},			#name : #type,			#protocol : #accessor,			#sourceCode : 'type\r\t^type',			#stamp : 'JN 6/20/2019 11:58',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T11:58:36.194257+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Car\r\tinstanceVariableNames: \'price type\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LifewareHR-Core\''			},			#name : #Car,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #Car					},					#name : #price,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #Car					},					#name : #type,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Car class\r\tinstanceVariableNames: \'\''				},				#name : #'Car class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #Car				},				#parent : @7,				#content : 'exercises.',				#stamp : 'VincentBlondeau 3/25/2019 10:12'			},			#classVariables : OrderedCollection [ ],			#category : #LifewareHR-Core,			#package : #LifewareHR,			#sharedPools : OrderedCollection [ ]		},		#protocol : #accessing	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T11:58:36.222257+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #Car			},			#name : #'type:',			#protocol : #accessing,			#sourceCode : 'type: aType\r\ttype := aType',			#stamp : 'JN 6/20/2019 11:57',			#package : #LifewareHR		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #Car			},			#name : #'type:',			#protocol : #accessor,			#sourceCode : 'type: aType\r\ttype := aType',			#stamp : 'JN 6/20/2019 11:57',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T11:59:51.883822+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : true,				#className : #'Car class'			},			#name : #golf,			#protocol : #'instance creation',			#sourceCode : 'golf\r\t^ self price: 100',			#stamp : 'LWhr 3/28/2017 15:17',			#package : #LifewareHR		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : true,				#className : #'Car class'			},			#name : #golf,			#protocol : #'instance creation',			#sourceCode : 'golf\r\tself type = \'golf\'.\r\t^ self price: 100',			#stamp : 'JN 6/20/2019 11:59',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T12:00:10.484299+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : true,				#className : #'Car class'			},			#name : #golf,			#protocol : #'instance creation',			#sourceCode : 'golf\r\tself type = \'golf\'.\r\t^ self price: 100',			#stamp : 'JN 6/20/2019 11:59',			#package : #LifewareHR		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : true,				#className : #'Car class'			},			#name : #golf,			#protocol : #'instance creation',			#sourceCode : 'golf\r\tself type: \'golf\'.\r\t^ self price: 100',			#stamp : 'JN 6/20/2019 12:00',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T12:06:18.697603+02:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : true,				#className : #'Car class'			},			#name : #tesla,			#protocol : #'instance creation',			#sourceCode : 'tesla\r\t^ self price: 400',			#stamp : 'LWhr 3/28/2017 14:51',			#package : #LifewareHR		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : true,				#className : #'Car class'			},			#name : #tesla,			#protocol : #'instance creation',			#sourceCode : 'tesla\r\t"| newCar |\r\tnewCar := self new.\r\tnewCar price: 400; type: \'tesla\'."\r\t^ self price: 400; type: \'tesla\'',			#stamp : 'JN 6/20/2019 12:06',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T12:06:27.215813+02:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : true,				#className : #'Car class'			},			#name : #tesla,			#protocol : #'instance creation',			#sourceCode : 'tesla\r\t"| newCar |\r\tnewCar := self new.\r\tnewCar price: 400; type: \'tesla\'."\r\t^ self price: 400; type: \'tesla\'',			#stamp : 'JN 6/20/2019 12:06',			#package : #LifewareHR		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : true,				#className : #'Car class'			},			#name : #tesla,			#protocol : #'instance creation',			#sourceCode : 'tesla\r\t^ self price: 400; type: \'tesla\'',			#stamp : 'JN 6/20/2019 12:06',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T12:06:52.112513+02:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : true,				#className : #'Car class'			},			#name : #tesla,			#protocol : #'instance creation',			#sourceCode : 'tesla\r\t^ self price: 400; type: \'tesla\'',			#stamp : 'JN 6/20/2019 12:06',			#package : #LifewareHR		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : true,				#className : #'Car class'			},			#name : #tesla,			#protocol : #'instance creation',			#sourceCode : 'tesla\r\t| newCar |\r\tnewCar := self new.\r\tnewCar price: 400; type: \'tesla\'.\r\t^ newCar\r\t"^ self price: 400; type: \'tesla\'"',			#stamp : 'JN 6/20/2019 12:06',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T12:08:24.281434+02:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : true,				#className : #'Car class'			},			#name : #golf,			#protocol : #'instance creation',			#sourceCode : 'golf\r\tself type: \'golf\'.\r\t^ self price: 100',			#stamp : 'JN 6/20/2019 12:00',			#package : #LifewareHR		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : true,				#className : #'Car class'			},			#name : #golf,			#protocol : #'instance creation',			#sourceCode : 'golf\r\t| newCar |\r\tnewCar := self new.\r\tnewCar price: 100; type: \'golf\'.\r\t^ newCar\r\t"^ self price: 100"',			#stamp : 'JN 6/20/2019 12:08',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T12:10:15.930018+02:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : true,				#className : #'Car class'			},			#name : #panda,			#protocol : #'instance creation',			#sourceCode : 'panda\r\t^ self price: 50',			#stamp : 'LWhr 3/28/2017 14:50',			#package : #LifewareHR		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : true,				#className : #'Car class'			},			#name : #panda,			#protocol : #'instance creation',			#sourceCode : 'panda\r\t| newCar |\r\tnewCar := self new.\r\tnewCar price: 50; type: \'panda\'.\r\t^ newCar\r\t"^ self price: 50"',			#stamp : 'JN 6/20/2019 12:10',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T12:18:10.711472+02:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #CarRental			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tcars := OrderedCollection new',			#stamp : 'LWhr 3/28/2017 15:26',			#package : #LifewareHR		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #CarRental			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tcars := Set new',			#stamp : 'JN 6/20/2019 12:18',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T12:19:35.851114+02:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #CarRental\r\tinstanceVariableNames: \'cars\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LifewareHR-Core\''			},			#name : #CarRental,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #CarRental					},					#name : #cars,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'CarRental class\r\tinstanceVariableNames: \'\''				},				#name : #'CarRental class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #CarRental				},				#parent : @7,				#content : 'commentStamp: \'LWhr 3/28/2017 14:51\' prior: 0',				#stamp : 'VincentBlondeau 3/25/2019 10:12'			},			#classVariables : OrderedCollection [ ],			#category : #LifewareHR-Core,			#package : #LifewareHR,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #CarRental\r\tinstanceVariableNames: \'cars numTotalCars\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'LifewareHR-Core\''			},			#name : #CarRental,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #CarRental					},					#name : #cars,					#parent : @23				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#isMetaSide : false,						#className : #CarRental					},					#name : #numTotalCars,					#parent : @23				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'CarRental class\r\tinstanceVariableNames: \'\''				},				#name : #'CarRental class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @23			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#isMetaSide : false,					#className : #CarRental				},				#parent : @23,				#content : 'commentStamp: \'LWhr 3/28/2017 14:51\' prior: 0',				#stamp : 'VincentBlondeau 3/25/2019 10:12'			},			#classVariables : OrderedCollection [ ],			#category : #LifewareHR-Core,			#package : #LifewareHR,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T12:20:13.81681+02:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #CarRental			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tcars := Set new',			#stamp : 'JN 6/20/2019 12:18',			#package : #LifewareHR		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #CarRental			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tcars := Set new.\r\tnumTotalCars := 0',			#stamp : 'JN 6/20/2019 12:20',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T12:21:52.337287+02:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #CarRentalTest			},			#name : #testFixedNumberOfCars,			#protocol : #'as yet unclassified',			#sourceCode : 'testFixedNumberOfCars\r\t"Our car rental has now a fixed number of cars. Extend the code to make this test green: define the missing (red) methods in the class CarRental"\r\r\t| carRental |\r\tcarRental := CarRental new.\r\tcarRental\r\t\taddCar: Car panda;\r\t\taddCar: Car panda;\r\t\taddCar: Car tesla.\r\t\r\tself assert: carRental totalCars size equals: 3',			#stamp : 'JerriNummenpalo 6/19/2019 23:59',			#package : #LifewareHR		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #CarRentalTest			},			#name : #testFixedNumberOfCars,			#protocol : #'as yet unclassified',			#sourceCode : 'testFixedNumberOfCars\r\t"Our car rental has now a fixed number of cars. Extend the code to make this test green: define the missing (red) methods in the class CarRental"\r\r\t| carRental |\r\tcarRental := CarRental new.\r\tcarRental\r\t\taddCar: Car panda;\r\t\taddCar: Car panda;\r\t\taddCar: Car tesla.\r\t\r\tself assert: carRental totalCars equals: 3',			#stamp : 'JN 6/20/2019 12:21',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T12:22:36.374377+02:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #CarRentalTest			},			#name : #testFixedNumberOfCars,			#protocol : #'as yet unclassified',			#sourceCode : 'testFixedNumberOfCars\r\t"Our car rental has now a fixed number of cars. Extend the code to make this test green: define the missing (red) methods in the class CarRental"\r\r\t| carRental |\r\tcarRental := CarRental new.\r\tcarRental\r\t\taddCar: Car panda;\r\t\taddCar: Car panda;\r\t\taddCar: Car tesla.\r\t\r\tself assert: carRental totalCars equals: 3',			#stamp : 'JN 6/20/2019 12:21',			#package : #LifewareHR		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #CarRentalTest			},			#name : #testFixedNumberOfCars,			#protocol : #'as yet unclassified',			#sourceCode : 'testFixedNumberOfCars\r\t"Our car rental has now a fixed number of cars. Extend the code to make this test green: define the missing (red) methods in the class CarRental"\r\r\t| carRental |\r\tcarRental := CarRental new.\r\tcarRental\r\t\taddCar: Car panda;\r\t\taddCar: Car panda;\r\t\taddCar: Car tesla.\r\t\r\tself assert: carRental totalCars size equals: 3',			#stamp : 'JN 6/20/2019 12:22',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T12:23:25.016345+02:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #CarRental			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tcars := Set new.\r\tnumTotalCars := 0',			#stamp : 'JN 6/20/2019 12:20',			#package : #LifewareHR		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #CarRental			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r\tcars := OrderedCollection new.\r\tnumTotalCars := 0',			#stamp : 'JN 6/20/2019 12:23',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T12:26:28.949925+02:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #CarRentalTest			},			#name : #testRentingWithDates,			#protocol : #'4 exercise',			#sourceCode : 'testRentingWithDates\r\t"Extend the code and write a test for the following scenario: Our car rentals has 3, 2 tesla and 1 golf. Customer Bob call our service asking for a golf for 5 days starting on the 1st of April. Unfortunately the golf is already rented up to the 3rd of april. Our service tells Bob that we have two available teslas, and that they can provide an individual discount of 10 euros per day. \r\rOur informatic system should offer the functionalities to sustain the above scenario, for example it should know whether the panda is free in the requested period and so on...\r\rwrite test case(s) and code to simulate this scenario"\r\r\tself error. "remove this"',			#stamp : 'LWhr 3/28/2017 16:01',			#package : #LifewareHR		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #CarRentalTest			},			#name : #testRentingWithDates,			#protocol : #'4 exercise',			#sourceCode : 'testRentingWithDates\r\t"Extend the code and write a test for the following scenario: Our car rentals has 3 pandas, 2 tesla and 1 golf. Customer Bob call our service asking for a golf for 5 days starting on the 1st of April. Unfortunately the golf is already rented up to the 3rd of april. Our service tells Bob that we have two available teslas, and that they can provide an individual discount of 10 euros per day. \r\rOur informatic system should offer the functionalities to sustain the above scenario, for example it should know whether the panda is free in the requested period and so on...\r\rwrite test case(s) and code to simulate this scenario"\r\r\tself error. "remove this"',			#stamp : 'JN 6/20/2019 12:26',			#package : #LifewareHR		}	}}OmEntry {	#tags : {		#author : 'JN',		#time : DateAndTime [ '2019-06-20T12:26:38.728383+02:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #CarRentalTest			},			#name : #testRentingWithDates,			#protocol : #'4 exercise',			#sourceCode : 'testRentingWithDates\r\t"Extend the code and write a test for the following scenario: Our car rentals has 3 pandas, 2 tesla and 1 golf. Customer Bob call our service asking for a golf for 5 days starting on the 1st of April. Unfortunately the golf is already rented up to the 3rd of april. Our service tells Bob that we have two available teslas, and that they can provide an individual discount of 10 euros per day. \r\rOur informatic system should offer the functionalities to sustain the above scenario, for example it should know whether the panda is free in the requested period and so on...\r\rwrite test case(s) and code to simulate this scenario"\r\r\tself error. "remove this"',			#stamp : 'JN 6/20/2019 12:26',			#package : #LifewareHR		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#isMetaSide : false,				#className : #CarRentalTest			},			#name : #testRentingWithDates,			#protocol : #'4 exercise',			#sourceCode : 'testRentingWithDates\r\t"Extend the code and write a test for the following scenario: Our car rentals has 3 pandas, 2 tesla and 1 golf. Customer Bob calls our service asking for a golf for 5 days starting on the 1st of April. Unfortunately the golf is already rented up to the 3rd of april. Our service tells Bob that we have two available teslas, and that they can provide an individual discount of 10 euros per day. \r\rOur informatic system should offer the functionalities to sustain the above scenario, for example it should know whether the panda is free in the requested period and so on...\r\rwrite test case(s) and code to simulate this scenario"\r\r\tself error. "remove this"',			#stamp : 'JN 6/20/2019 12:26',			#package : #LifewareHR		}	}}